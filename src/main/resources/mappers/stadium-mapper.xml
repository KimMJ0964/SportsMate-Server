<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- !namespace : 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="stadiumMapper">
    <!-- Insert -->
    <insert id="insertStadium" parameterType="Stadium" useGeneratedKeys="true" keyProperty="stadiumNo">
        insert into stadium(
            MEM_NO,
            STADIUM_NAME,
            STADIUM_ADDRESS,
            STADIUM_ZIPCODE,
            STADIUM_SCORE,
            STADIUM_PRICE,
            STADIUM_CATEGORY,
            STADIUM_START_TIME,
            STADIUM_END_TIME
        )values(
            #{memNo},
            #{stadiumName},
            #{stadiumAdd},
            #{stadiumZipcode},
            #{stadiumScore},
            #{stadiumPrice},
            #{stadiumCategory},
            #{stadiumStartTime},
            #{stadiumEndTime}
        )
    </insert>
<!--
    Java의 char형으로만 확인 가능 String 타입일 경우 문자로 인식 못함
-->
    <insert id="insertAmenities" parameterType="Amenities">
        insert into stadium_am(
        <trim suffixOverrides=",">
            STADIUM_NO,
            <if test="toilet == 'Y'">
                TOILET,
            </if>
            <if test="shower == 'Y'">
                SHOWER,
            </if>
            <if test="smoke == 'Y'">
                SMOKE,
            </if>
            <if test="park == 'Y'">
                PARK,
            </if>
            <if test="drink == 'Y'">
                DRINK
            </if>
        </trim>
        )values(
        <trim suffixOverrides=",">
            #{stadiumNo},
            <if test="toilet == 'Y'">
                #{toilet},
            </if>
            <if test="shower == 'Y'">
                #{shower},
            </if>
            <if test="smoke == 'Y'">
                #{smoke},
            </if>
            <if test="park == 'Y'">
                #{park},
            </if>
            <if test="drink == 'Y'">
                #{drink}
            </if>
        </trim>
        )
    </insert>
    <insert id="insetRental" parameterType="Rental">
        insert into stadium_rental(
        <trim suffixOverrides=",">
            STADIUM_NO,
            <if test="ball == 'Y'">
                BALL,
            </if>
            <if test="vest == 'Y'">
                VEST
            </if>
        </trim>
        )values(
        <trim suffixOverrides=",">
            #{stadiumNo},
            <if test="ball == 'Y'">
                #{ball},
            </if>
            <if test="vest == 'Y'">
                #{vest},
            </if>
        </trim>
        )
    </insert>
<!--
    foreach : parameterType이  list 혹은 Array 때 사용
        - collection : 전달받은 인자값(list || array)
        - item :  전달받은 인자값을 alias명으로 대체
        - open : 구문 시작시 삽입할 문자열
        - close : 구문 종료시 삽입할 문자열
        - separator : 반복 되는 사이에 출력할 문자열
        - index : 반복되는 구문 번호(0부터 순차적으로 증가)
 -->
    <insert id="insertStadiumAttachment">
        insert into STADIUM_IMG(
        STADIUM_NO,
        ORIGIN_NAME,
        CHANGE_NAME,
        FILE_PATH,
        FILE_TYPE
        )values
        <foreach collection="list" item="attachment" separator=",">
            (
                #{attachment.stadiumNo},
                #{attachment.originName},
                #{attachment.changeName},
                #{attachment.filePath},
                #{attachment.fileType}
            )
        </foreach>

    </insert>
    <select id="loginMember" parameterType="Member" resultType="Member">
        select MEM_NO as memNo,
        MEM_EMAIL as memEmail,
        MEM_PWD as memPwd,
        MEM_NAME as memName,
        MEM_ADD as memAdd,
        MEM_GENDER as memGender,
        MEM_PHONE as memPhone,
        MEM_STATUS as memStatus,
        MEM_RANK as memRank,
        MEM_ENROLL_DATE as memEnrollDate,
        MEM_BIRTH as memBirth
        from member
        where MEM_EMAIL = #{memEmail}
        and MEM_STATUS in('Y','M','A')
    </select>
    <insert id="insertMember" parameterType="Member" useGeneratedKeys="true" keyProperty="memNo">
        INSERT INTO MEMBER(
        MEM_EMAIL,
        MEM_PWD,
        MEM_NAME,
        MEM_GENDER,
        MEM_ADD,
        MEM_BIRTH,
        MEM_PHONE,
        MEM_STATUS)
        VALUES(
        #{memEmail},
        #{memPwd},
        #{memName},
        #{memGender},
        #{memAdd},
        #{memBirth},
        #{memPhone},
        #{memStatus}
        )
    </insert>
    <insert id="insertProfile" parameterType="Profile">
        INSERT into PROFILE_FILE(
        <if test="memNo > 0">
            mem_no,
        </if>
        <if test="teamNo > 0">
            team_no,
        </if>
        ORIGIN_NAME,
        CHANGE_NAME,
        FILE_PATH
        )
        values(
        <if test="memNo > 0">
            #{memNo},
        </if>
        <if test="teamNo > 0">
            #{teamNo},
        </if>
        #{originName},
        #{changeName},
        #{filePath}
        )
    </insert>
    <insert id="insertCategory" parameterType="Category">
        insert into category(
        <trim suffixOverrides=",">
            MEM_NO,
            <if test="socPosition != null">SOC_POSI,</if>
            <if test="socSkill != null">SOC_ABILITY,</if>
            <if test="futPosition != null">FOOT_POSI,</if>
            <if test="futSkill != null">FOOT_ABILITY,</if>
            <if test="basketPosition != null">BASKET_POSI,</if>
            <if test="basketSkill != null">BASKET_ABILITY,</if>
            <if test="basePosition != null">BASE_POSI,</if>
            <if test="baseSkill != null">BASE_ABILITY</if>
        </trim>
        ) values(
        <trim suffixOverrides=",">
            #{memNo},
            <if test="socPosition != null">#{socPosition},</if>
            <if test="socSkill != null">#{socSkill},</if>
            <if test="futPosition != null">#{futPosition},</if>
            <if test="futSkill != null">#{futSkill},</if>
            <if test="basketPosition != null">#{basketPosition},</if>
            <if test="basketSkill != null">#{basketSkill},</if>
            <if test="basePosition != null">#{basePosition},</if>
            <if test="baseSkill != null">#{baseSkill}</if>
        </trim>
        )
    </insert>
    <!-- 경기 예정 -->
    <select id="stadiumSchedule" resultType="Schedule">
    	SELECT MATCH
    		S.MEM_NO AS memNo,
    		S.RESERV_START AS reservStart,
    		S.RESERV_END AS reservEnd
    	FROM TEAM T
    	JOIN MEM NO ON T.MEM_NO = S.TEAM_NO
    </select>
    
    <!-- 구장 리뷰 -->
    <insert id="insertPReview">
    	INSERT INTO STADIUM_REVIEW (
		    REVIEW_CONTENT,
		    REVIEW_STAR,
		    STADIUM_NO,
		    MEM_NO,
		    REVIEW_DATE
		)
		VALUES (
		    #{reviewContent},
		    #{reviewStar},
		    #{stadiumNo},
		    #{memNo},
		    NOW()
		)
    </insert>
    
    <!-- 관리자 소유의 구장 정보 -->
    <select id="selectOneStadiumByManager" parameterType="int" resultType="StadiumDto">
    SELECT 
	    s.STADIUM_NO AS stadiumNo,
	    s.MEM_NO AS memNo,
	    s.STADIUM_NAME AS stadiumName,
	    s.STADIUM_ADDRESS AS stadiumAdd,
	    s.STADIUM_ZIPCODE AS stadiumZipcode,
	    s.STADIUM_PRICE AS stadiumPrice,
	    s.STADIUM_CATEGORY AS stadiumCategory,
	    s.STADIUM_START_TIME AS stadiumStartTime,
	    s.STADIUM_END_TIME AS stadiumEndTime,
	    s.STATUS AS status,
	    sa.TOILET AS toilet,
	    sa.SHOWER AS shower,
	    sa.SMOKE AS smoke,
	    sa.PARK AS park,
	    sa.DRINK AS drink,
	    si.ORIGIN_NAME AS originName,
	    si.CHANGE_NAME AS changeName,
	    si.FILE_PATH AS filePath,
	    si.STATUS AS imgStatus,
	    si.FILE_TYPE AS fileType,
	    sr.BALL AS ball,
	    sr.VEST AS vest
	FROM 
	    STADIUM s
	LEFT JOIN 
	    STADIUM_AM sa ON s.STADIUM_NO = sa.STADIUM_NO
	LEFT JOIN 
	    STADIUM_IMG si ON s.STADIUM_NO = si.STADIUM_NO
	LEFT JOIN 
	    STADIUM_RENTAL sr ON s.STADIUM_NO = sr.STADIUM_NO
	WHERE 
	    s.MEM_NO = #{memNo}
	LIMIT 1;
</select>

<!-- 구장 정보 수정 -->
    <update id="updateStadium" parameterType="StadiumDto">
        UPDATE STADIUM
    SET
        STADIUM_NAME = #{stadiumName},
        STADIUM_ADDRESS = #{stadiumAdd},
        STADIUM_ZIPCODE = #{stadiumZipcode},
        STADIUM_PRICE = #{stadiumPrice},
        STADIUM_CATEGORY = #{stadiumCategory},
        STADIUM_START_TIME = #{stadiumStartTime},
        STADIUM_END_TIME = #{stadiumEndTime}
    WHERE STADIUM_NO = #{stadiumNo}
    </update>

    <!-- 편의시설 정보 수정 -->
    <update id="updateAmenities" parameterType="Amenities">
        UPDATE STADIUM_AM
        SET 
            TOILET = #{toilet},
            SHOWER = #{shower},
            SMOKE = #{smoke},
            PARK = #{park},
            DRINK = #{drink}
        WHERE STADIUM_NO = #{stadiumNo}
    </update>

    <!-- 대여 시스템 정보 수정 -->
    <update id="updateRental" parameterType="Rental">
        UPDATE STADIUM_RENTAL
        SET 
            BALL = #{ball},
            VEST = #{vest}
        WHERE STADIUM_NO = #{stadiumNo}
    </update>


	<!-- 구장 이미지  -->
	<select id="selectStadiumImages" parameterType="int" resultType="StadiumDto">
	    SELECT 
	        si.STADIUM_NO AS stadiumNo,
	        si.ORIGIN_NAME AS originName,
	        si.CHANGE_NAME AS changeName,
	        si.FILE_PATH AS filePath,
	        si.FILE_TYPE AS fileType
	    FROM 
	        STADIUM_IMG si
	    WHERE 
	        si.STADIUM_NO = #{memNo} AND si.FILE_TYPE = 1
	</select>
	
	<!-- 환불 리스트  -->
	<select id="getRefundPageData" parameterType="int" resultType="StadiumRefundDto">
		SELECT 
		    m.MATCH_NO AS matchNo,              
		    s.STADIUM_NAME AS stadiumName,       
		    si.FILE_PATH AS stadiumImage,              
		    a_team.TEAM_NAME AS aaTeamName,        
		    b_team.TEAM_NAME AS bbTeamName,      
		    m.RESERV_START AS reservStart,        
		    m.RESERV_END AS reservEnd              
		FROM 
		    `MATCH` m       
		INNER JOIN 
		    STADIUM s ON m.STADIUM_NO = s.STADIUM_NO
		LEFT JOIN 
		    STADIUM_IMG si ON s.STADIUM_NO = si.STADIUM_NO AND si.FILE_TYPE = 0 
		LEFT JOIN 
		    TEAM a_team ON m.TEAM_A_NO = a_team.TEAM_NO 
		LEFT JOIN 
		    TEAM b_team ON m.TEAM_B_NO = b_team.TEAM_NO 
		WHERE 
		    s.MEM_NO = #{memNo};
	</select>
	
	<!-- 경기 예정 리스트 -->
	<select id="getGameScheduleData" parameterType="int" resultType="GameScheduleDto">
		SELECT 
		    m.MATCH_NO AS matchNo,              
		    s.STADIUM_NAME AS stadiumName,       
		    a_team_img.FILE_PATH AS aaTeamImage,             
		    b_team_img.FILE_PATH AS bbTeamImage,             
		    a_team.TEAM_NAME AS aaTeamName,        
		    b_team.TEAM_NAME AS bbTeamName,      
		    m.RESERV_START AS reservStart,        
		    m.RESERV_END AS reservEnd
		FROM 
		    `MATCH` m
		JOIN 
		    `STADIUM` s ON m.STADIUM_NO = s.STADIUM_NO
		JOIN 
		    `TEAM` a_team ON m.TEAM_A_NO = a_team.TEAM_NO
		JOIN 
		    `TEAM` b_team ON m.TEAM_B_NO = b_team.TEAM_NO
		LEFT JOIN 
		    `TEAM_IMG` a_team_img ON a_team.TEAM_NO = a_team_img.TEAM_NO AND a_team_img.FILE_LEVER = '3'
		LEFT JOIN 
		    `TEAM_IMG` b_team_img ON b_team.TEAM_NO = b_team_img.TEAM_NO AND b_team_img.FILE_LEVER = '3'
		WHERE
			m.MATCH_NO = 11 
		    AND m.SCORE_A IS NULL 					<!-- A팀 점수가 NULL -->
		    AND m.SCORE_B IS NULL 				<!-- B팀 점수가 NULL -->
		    AND m.ACCESS_DATE > CURRENT_DATE; 	<!-- 오늘 이후로 잡힌 매치 -->

	</select>

	<!-- 환불 처리 -->
	<update id="updateReservationStatus">
	    UPDATE MATCH_REFUND
	    SET STATUS = 'N', REFUND_CONTENT = #{refundContent}
	    WHERE MATCH_NO = #{matchNo};
	</update>
	
	<delete id="deleteMatchBest" parameterType="int">
	    DELETE FROM `MATCH_BEST`
	    WHERE MATCH_NO = #{matchNo};
	</delete>
	
	<delete id="deleteMatch" parameterType="int">
	    DELETE FROM `MATCH`
	    WHERE MATCH_NO = #{matchNo};
	</delete>
	


    <!-- 문의 리스트 갯수 -->
    <select id="selectInquiryCount" resultType="_int">
    	SELECT COUNT(*)
		FROM STADIUM_QNA sq
		JOIN STADIUM s ON sq.STADIUM_NO = s.STADIUM_NO
		WHERE s.MEM_NO = #{memNo}
    </select>
    
    <!-- 문의 리스트 -->
    <select id="inquiryList" resultType="StadiumQna">
    	SELECT sq.MATCH_QNA_NO as matchQnaNo,
   				sq.MATCH_Q_TITLE as matchQTitle,
   				sq.MATCH_Q_DETAIL as matchQDetail,
   				sq.MATCH_A as matchA,
   				sq.MATCH_QNA_DATE as matchQnaDate
		FROM STADIUM_QNA sq
		JOIN STADIUM s ON sq.STADIUM_NO = s.STADIUM_NO
		WHERE s.MEM_NO = #{memNo}
		ORDER BY MATCH_QNA_NO DESC;
    </select>
    
    <!-- 문의 답변 -->
    <update id="inquiryUpdate">
    	UPDATE STADIUM_QNA
		SET MATCH_A = #{matchA}
		WHERE MATCH_QNA_NO = #{matchQnaNo};
    </update>
</mapper>
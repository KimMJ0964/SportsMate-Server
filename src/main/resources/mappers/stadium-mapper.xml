<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- !namespace : 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="stadiumMapper">
    <!-- Insert -->
    <insert id="insertStadium" parameterType="Stadium" useGeneratedKeys="true" keyProperty="stadiumNo">
        insert into stadium(
            MEM_NO,
            STADIUM_NAME,
            STADIUM_ADDRESS,
            STADIUM_ZIPCODE,
            STADIUM_SCORE,
            STADIUM_PRICE,
            STADIUM_CATEGORY,
            STADIUM_START_TIME,
            STADIUM_END_TIME
        )values(
            #{memNo},
            #{stadiumName},
            #{stadiumAdd},
            #{stadiumZipcode},
            #{stadiumScore},
            #{stadiumPrice},
            #{stadiumCategory},
            #{stadiumStartTime},
            #{stadiumEndTime}
        )
    </insert>
<!--
    Java의 char형으로만 확인 가능 String 타입일 경우 문자로 인식 못함
-->
    <insert id="insertAmenities" parameterType="Amenities">
        insert into stadium_am(
        <trim suffixOverrides=",">
            STADIUM_NO,
            <if test="toilet == 'Y'">
                TOILET,
            </if>
            <if test="shower == 'Y'">
                SHOWER,
            </if>
            <if test="smoke == 'Y'">
                SMOKE,
            </if>
            <if test="park == 'Y'">
                PARK,
            </if>
            <if test="drink == 'Y'">
                DRINK
            </if>
        </trim>
        )values(
        <trim suffixOverrides=",">
            #{stadiumNo},
            <if test="toilet == 'Y'">
                #{toilet},
            </if>
            <if test="shower == 'Y'">
                #{shower},
            </if>
            <if test="smoke == 'Y'">
                #{smoke},
            </if>
            <if test="park == 'Y'">
                #{park},
            </if>
            <if test="drink == 'Y'">
                #{drink}
            </if>
        </trim>
        )
    </insert>
    <insert id="insetRental" parameterType="Rental">
        insert into stadium_rental(
        <trim suffixOverrides=",">
            STADIUM_NO,
            <if test="ball == 'Y'">
                BALL,
            </if>
            <if test="vest == 'Y'">
                VEST
            </if>
        </trim>
        )values(
        <trim suffixOverrides=",">
            #{stadiumNo},
            <if test="ball == 'Y'">
                #{ball},
            </if>
            <if test="vest == 'Y'">
                #{vest},
            </if>
        </trim>
        )
    </insert>
<!--
    foreach : parameterType이  list 혹은 Array 때 사용
        - collection : 전달받은 인자값(list || array)
        - item :  전달받은 인자값을 alias명으로 대체
        - open : 구문 시작시 삽입할 문자열
        - close : 구문 종료시 삽입할 문자열
        - separator : 반복 되는 사이에 출력할 문자열
        - index : 반복되는 구문 번호(0부터 순차적으로 증가)
 -->
    <insert id="insertStadiumAttachment">
        insert into STADIUM_IMG(
        STADIUM_NO,
        ORIGIN_NAME,
        CHANGE_NAME,
        FILE_PATH,
        FILE_TYPE
        )values
        <foreach collection="list" item="attachment" separator=",">
            (
                #{attachment.stadiumNo},
                #{attachment.originName},
                #{attachment.changeName},
                #{attachment.filePath},
                #{attachment.fileType}
            )
        </foreach>

    </insert>
    <select id="loginMember" parameterType="Member" resultType="Member">
        select MEM_NO as memNo,
        MEM_EMAIL as memEmail,
        MEM_PWD as memPwd,
        MEM_NAME as memName,
        MEM_ADD as memAdd,
        MEM_GENDER as memGender,
        MEM_PHONE as memPhone,
        MEM_STATUS as memStatus,
        MEM_RANK as memRank,
        MEM_ENROLL_DATE as memEnrollDate,
        MEM_BIRTH as memBirth
        from member
        where MEM_EMAIL = #{memEmail}
        and MEM_STATUS in('Y','M','A')
    </select>
    <insert id="insertMember" parameterType="Member" useGeneratedKeys="true" keyProperty="memNo">
        INSERT INTO MEMBER(
        MEM_EMAIL,
        MEM_PWD,
        MEM_NAME,
        MEM_GENDER,
        MEM_ADD,
        MEM_BIRTH,
        MEM_PHONE,
        MEM_STATUS)
        VALUES(
        #{memEmail},
        #{memPwd},
        #{memName},
        #{memGender},
        #{memAdd},
        #{memBirth},
        #{memPhone},
        #{memStatus}
        )
    </insert>
    <insert id="insertProfile" parameterType="Profile">
        INSERT into PROFILE_FILE(
        <if test="memNo > 0">
            mem_no,
        </if>
        <if test="teamNo > 0">
            team_no,
        </if>
        ORIGIN_NAME,
        CHANGE_NAME,
        FILE_PATH
        )
        values(
        <if test="memNo > 0">
            #{memNo},
        </if>
        <if test="teamNo > 0">
            #{teamNo},
        </if>
        #{originName},
        #{changeName},
        #{filePath}
        )
    </insert>
    <insert id="insertCategory" parameterType="Category">
        insert into category(
        <trim suffixOverrides=",">
            MEM_NO,
            <if test="socPosition != null">SOC_POSI,</if>
            <if test="socSkill != null">SOC_ABILITY,</if>
            <if test="futPosition != null">FOOT_POSI,</if>
            <if test="futSkill != null">FOOT_ABILITY,</if>
            <if test="basketPosition != null">BASKET_POSI,</if>
            <if test="basketSkill != null">BASKET_ABILITY,</if>
            <if test="basePosition != null">BASE_POSI,</if>
            <if test="baseSkill != null">BASE_ABILITY</if>
        </trim>
        ) values(
        <trim suffixOverrides=",">
            #{memNo},
            <if test="socPosition != null">#{socPosition},</if>
            <if test="socSkill != null">#{socSkill},</if>
            <if test="futPosition != null">#{futPosition},</if>
            <if test="futSkill != null">#{futSkill},</if>
            <if test="basketPosition != null">#{basketPosition},</if>
            <if test="basketSkill != null">#{basketSkill},</if>
            <if test="basePosition != null">#{basePosition},</if>
            <if test="baseSkill != null">#{baseSkill}</if>
        </trim>
        )
    </insert>
    <!-- 경기 예정 -->
    <select id="stadiumSchedule" resultType="Schedule">
    	SELECT MATCH
    		S.MEM_NO AS memNo,
    		S.RESERV_START AS reservStart,
    		S.RESERV_END AS reservEnd
    	FROM TEAM T
    	JOIN MEM NO ON T.MEM_NO = S.TEAM_NO
    </select>
    
    <!-- 구장 리뷰 -->
    <insert id="insertPReview">
    	INSERT INTO STADIUM_REVIEW (
		    REVIEW_CONTENT,
		    REVIEW_STAR,
		    STADIUM_NO,
		    MEM_NO,
		    REVIEW_DATE
		)
		VALUES (
		    #{reviewContent},
		    #{reviewStar},
		    #{stadiumNo},
		    #{memNo},
		    NOW()
		)
    </insert>
    
   <select id="getSearchResultCount" parameterType="map" resultType="int">
    SELECT COUNT(*) 
    FROM STADIUM S
    JOIN AREA A
    	ON S.STADIUM_ADDRESS LIKE CONCAT('%', REPLACE(A.AREA_NAME, '서울시', ''), '%')
    WHERE S.STATUS = 'Y'
    <if test="activityArea != null and activityArea != ''">
    	AND A.ACTIVITY_AREA = #{activityArea} -- 지역 코드 필터링
    </if>
    <if test="stadiumName != null and stadiumName != ''">
        AND STADIUM_NAME LIKE CONCAT('%', #{stadiumName}, '%')
    </if>
    <if test="stadiumCategory != null and stadiumCategory != ''">
        AND STADIUM_CATEGORY = #{stadiumCategory}
    </if>
    <if test="stadiumStartTime != null and stadiumStartTime != ''">
        AND S.STADIUM_START_TIME = #{stadiumStartTime}
    </if>
    <if test="stadiumEndTime != null and stadiumEndTime != ''">
        AND S.STADIUM_END_TIME = #{stadiumEndTime}
    </if>
</select>
<select id="getPaginatedStadiums" parameterType="map" resultType="StadiumSearch">
        SELECT 
        S.STADIUM_NO as stadiumNo,
        S.STADIUM_ADDRESS as stadiumAddress,
        S.STADIUM_NAME as stadiumName,
        S.STADIUM_CATEGORY as stadiumCategory,
        S.STADIUM_START_TIME as stadiumStartTime,
        S.STADIUM_END_TIME as stadiumEndTime,
        A.ACTIVITY_AREA as activityArea,
        SI.FILE_PATH as filePath,
        SI.CHANGE_NAME as changeName
    FROM 
        STADIUM S
    JOIN 
        AREA A ON S.STADIUM_ADDRESS LIKE CONCAT('%', REPLACE(A.AREA_NAME, '서울시 ', ''), '%')
    LEFT JOIN 
        STADIUM_IMG SI ON S.STADIUM_NO = SI.STADIUM_NO
        AND SI.FILE_TYPE = 0
        AND SI.STATUS = 'Y'
    WHERE 
        S.STATUS = 'Y'
    <if test="activityArea != null and activityArea != ''">
        AND A.ACTIVITY_AREA = #{activityArea}
    </if>
    <if test="stadiumName != null and stadiumName != ''">
        AND S.STADIUM_NAME LIKE CONCAT('%', #{stadiumName}, '%')
    </if>
    <if test="stadiumCategory != null and stadiumCategory != ''">
        AND S.STADIUM_CATEGORY = #{stadiumCategory}
    </if>
    <if test="stadiumStartTime != null and stadiumStartTime != ''">
        AND S.STADIUM_START_TIME = #{stadiumStartTime}
    </if>
    <if test="stadiumEndTime != null and stadiumEndTime != ''">
        AND S.STADIUM_END_TIME = #{stadiumEndTime}
    </if>
    ORDER BY S.STADIUM_NO ASC -- stadiumNo 기준으로 오름차순 정렬
    LIMIT #{startRow}, #{boardLimit}
</select>

<!-- 경기장 상세 정보 조회 -->
<select id="getStadiumDetail" parameterType="int" resultType="StadiumDetail">
   SELECT
        S.STADIUM_NO as stadiumNo, 
        S.MEM_NO as memNo, 
        S.STADIUM_NAME as stadiumName, 
        S.STADIUM_ZIPCODE as stadiumZipcode, 
        S.STADIUM_ADDRESS as stadiumAddress, 
        S.STADIUM_SCORE as stadiumScore, 
        S.STADIUM_PRICE as stadiumPrice, 
        S.STADIUM_CATEGORY as stadiumCategory, 
        S.STADIUM_START_TIME as stadiumStartTime, 
        S.STADIUM_END_TIME as stadiumEndTime, 
        S.STATUS as status,
        F.FILE_PATH as filePath,
        F.CHANGE_NAME as changeName
    FROM 
        STADIUM S
    LEFT JOIN 
        STADIUM_RENTAL R ON S.STADIUM_NO = R.STADIUM_NO
    LEFT JOIN 
        STADIUM_AM A ON S.STADIUM_NO = A.STADIUM_NO
    LEFT JOIN 
        STADIUM_IMG F ON S.STADIUM_NO = F.STADIUM_NO
    WHERE 
        S.STADIUM_NO = #{stadiumNo}
    LIMIT 1
</select>

<!-- 리뷰 조회 -->
<select id="selectReviewsByStadiumNo" parameterType="map" resultType="StadiumReviewDto">
	SELECT
        SR.REVIEW_NO AS reviewNo,
        SR.STADIUM_NO AS stadiumNo,
        SR.MEM_NO AS memNo,
        M.MEM_NAME AS memName,
        SR.REVIEW_STAR AS reviewStar,
        SR.REVIEW_CONTENT AS reviewContent,
        SR.REVIEW_DATE AS reviewDate
    FROM STADIUM_REVIEW SR
    JOIN MEMBER M ON SR.MEM_NO = M.MEM_NO
    WHERE SR.STADIUM_NO = #{stadiumNo}
    ORDER BY SR.REVIEW_DATE DESC
    LIMIT #{offset}, #{limit}
</select>

<!-- 전체 리뷰 개수 조회 -->
<select id="selectReviewCountByStadiumNo" parameterType="int" resultType="int">
    SELECT COUNT(*)
    FROM STADIUM_REVIEW
    WHERE STADIUM_NO = #{stadiumNo}
</select>

<!-- 구장 신청하기 -->
<!-- 1. 팀장 여부 확인 -->
<select id="getTeamLeaderNo" parameterType="int" resultType="int">
    SELECT 
        MEM_NO
    FROM 
        TEAM
    WHERE 
        TEAM_NO = #{teamNo};
</select>

<!-- 2. 활성화된 팀 멤버 가져오기 -->
<select id="getTeamMembers" parameterType="int" resultType="StadiumApplicationDto">
	SELECT 
	    T.TEAM_NO AS teamNo,
	    T.MEM_NO AS teamLeaderNo,
	    T.TEAM_NAME AS teamName,
	    T.SCORE AS score,
	    T.TEAM_POINT AS teamPoint,
	    TM.MEM_NO AS tmemNo,
	    TM.STATUS AS status,
	    M.MEM_NAME AS memName
	FROM 
	    TEAM T
	LEFT JOIN 
	    TEAM_MEMBER TM ON T.TEAM_NO = TM.TEAM_NO
	LEFT JOIN 
	    MEMBER M ON TM.MEM_NO = M.MEM_NO
	WHERE 
	    T.TEAM_NO = #{teamNo}
	AND 
	    TM.STATUS = 'Y';
</select>

<!-- 3. 로그인한 사용자의 팀 번호 가져오기 -->
<select id="getTeamNoByMember" parameterType="int" resultType="int">
    SELECT 
        TEAM_NO
    FROM 
        TEAM_MEMBER
    WHERE 
        MEM_NO = #{memNo}
    AND 
        STATUS = 'Y';
</select>

<insert id="insertQna" parameterType="StadiumQnaDto">
    INSERT INTO STADIUM_QNA (
        Q_MEM_NO, STADIUM_NO, MATCH_Q_TITLE, MATCH_Q_DETAIL, MATCH_QNA_DATE
    ) VALUES (
        #{qMemNo}, #{stadiumNo}, #{matchQTitle}, #{matchQDetail}, NOW()
    )
</insert>
    <!-- 문의 리스트 갯수 -->
    <select id="selectInquiryCount" resultType="_int">
    	SELECT COUNT(*)
		FROM STADIUM_QNA sq
		JOIN STADIUM s ON sq.STADIUM_NO = s.STADIUM_NO
		WHERE s.MEM_NO = #{memNo}
    </select>
    
    <!-- 문의 리스트 -->
    <select id="inquiryList" resultType="StadiumQna">
    	SELECT sq.MATCH_QNA_NO as matchQnaNo,
   				sq.MATCH_Q_TITLE as matchQTitle,
   				sq.MATCH_Q_DETAIL as matchQDetail,
   				sq.MATCH_A as matchA,
   				sq.MATCH_QNA_DATE as matchQnaDate
		FROM STADIUM_QNA sq
		JOIN STADIUM s ON sq.STADIUM_NO = s.STADIUM_NO
		WHERE s.MEM_NO = #{memNo}
		ORDER BY MATCH_QNA_NO DESC;
    </select>
    
    <!-- 문의 답변 -->
    <update id="inquiryUpdate">
    	UPDATE STADIUM_QNA
		SET MATCH_A = #{matchA}
		WHERE MATCH_QNA_NO = #{matchQnaNo};
    </update>
</mapper>
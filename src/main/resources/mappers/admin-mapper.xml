<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- !namespace : 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="adminMapper">

	<!-- =============================select============================= -->
	
	<!-- 차트 데이터 가져오기 -->
    <select id="drawChart" resultType="ChartDateDto">
        SELECT
		    COUNT(CASE WHEN login_date = CURDATE() THEN 1 END) AS today,
		    COUNT(CASE WHEN login_date = CURDATE() - INTERVAL 1 DAY THEN 1 END) AS oneDay,
		    COUNT(CASE WHEN login_date = CURDATE() - INTERVAL 2 DAY THEN 1 END) AS twoDay,
		    COUNT(CASE WHEN login_date = CURDATE() - INTERVAL 3 DAY THEN 1 END) AS threeDay,
		    COUNT(CASE WHEN login_date = CURDATE() - INTERVAL 4 DAY THEN 1 END) AS fourDay
		FROM login_log
    </select>
    
    <!-- 신고접수 리스트 가져오기 -->
    <select id="selectListCount" parameterType="String" resultType="_int">
        SELECT COUNT(*)
		FROM member_penalty
		WHERE PN_STATUS = 'N' AND PN_TYPE = #{category}
    </select>
    
    <select id="selectAllListCount" resultType="_int">
        SELECT COUNT(*)
		FROM member_penalty
		WHERE PN_STATUS = 'N'
    </select>
    
    <!-- 신고접수 리스트 가져오기 -->
    <select id="selectList" parameterType="String" resultType="MemberPenalty">
        SELECT  PN_NO AS pnNo,
        		M.MEM_NO AS memNo,
		        PN_CONTENT AS pnContent,
		        PN_DATE AS pnDate,
		        REP_DATE AS repDate,
		        PN_COUNT AS pnCount,
		        PN_REPORTER AS pnReporter,
		        PN_GROUND AS pnGround,
		        PN_COMMUNITY AS pnCommunity,
		        PN_COMMENT AS pnComment,
		        PN_TEAM AS pnTeam,
		        PN_TYPE AS pnType,
		  		STADIUM_NAME AS stadiumName,
		  		PN_STATUS AS pnStatus
		FROM member_penalty M
		LEFT JOIN STADIUM S ON M.PN_GROUND = S.STADIUM_NO
		WHERE PN_STATUS = 'N' AND PN_TYPE = #{category}
    </select>
    
    <!-- 차단유저 수 조회 -->
    <select id="selectBlockListCount" resultType="_int">
        SELECT COUNT(*)
		FROM MEMBER
		WHERE MEM_STATUS = 'B'
    </select>

	<!-- 차단유저 리스트 가져오기 -->
    <select id="selectBlockList" resultType="BlockProfileDto">
		SELECT 
		    MIN(mp.PN_NO) AS pnNo,
		    m.MEM_NO AS memNo,
		    m.MEM_EMAIL AS memEmail,
		    MIN(mp.PN_DATE) AS pnDate,
		    MIN(mp.PN_COUNT) AS pnCount,
		    GROUP_CONCAT(mp.PN_CONTENT SEPARATOR ', ') AS pnContent,
		    MIN(pf.ORIGIN_NAME) AS originName,
		    MIN(pf.CHANGE_NAME) AS changeName,
		    MIN(pf.FILE_PATH) AS filePath
		FROM 
		    MEMBER m
		LEFT JOIN 
		    MEMBER_PENALTY mp ON m.MEM_NO = mp.MEM_NO
		LEFT JOIN 
		    PROFILE_FILE pf ON m.MEM_NO = pf.MEM_NO
		WHERE 
		    m.MEM_STATUS = 'B'
		GROUP BY 
		    m.MEM_NO;
    </select>
    
    <!-- =============================update============================= -->
    
    <!-- 신고 접수하기 -->
    <update id="blockUser" parameterType="MemberPenalty">
	    UPDATE MEMBER m
	    JOIN MEMBER_PENALTY mp ON m.MEM_NO = mp.MEM_NO
	    SET 
	        mp.PN_COUNT = mp.PN_COUNT + 1,
	        mp.PN_DATE = CASE 
	                        WHEN mp.PN_COUNT + 1 = 3 THEN DATE_ADD(CURDATE(), INTERVAL 7 DAY)
	                        WHEN mp.PN_COUNT + 1 = 6 THEN DATE_ADD(CURDATE(), INTERVAL 1 MONTH)
	                        WHEN mp.PN_COUNT + 1 = 9 THEN DATE_ADD(CURDATE(), INTERVAL 100 YEAR)
	                        ELSE mp.PN_DATE
	                     END,
	        m.MEM_STATUS = CASE
	                            WHEN mp.PN_COUNT + 1 IN (3, 6, 9) AND m.MEM_STATUS != 'B' THEN 'B'
	                            ELSE m.MEM_STATUS
	                        END,
	        mp.PN_STATUS = CASE
	                            WHEN mp.PN_NO = #{pnNo} THEN 'Y'
	                            ELSE mp.PN_STATUS
	                        END
	    WHERE m.MEM_NO = #{memNo}		
    </update>
    
    <!-- 중복제거 -->
    <update id="blockUserDuplicate" parameterType="MemberPenalty">
    	UPDATE MEMBER_PENALTY
		SET PN_STATUS = 'Y'
		WHERE MEM_NO = #{memNo}
		AND (
		    (PN_GROUND IS NOT NULL AND PN_GROUND = #{pnGround})
		    OR (PN_COMMUNITY IS NOT NULL AND PN_COMMUNITY = #{pnCommunity})
		    OR (PN_TEAM IS NOT NULL AND PN_TEAM = #{pnTeam})
		    OR (PN_COMMENT IS NOT NULL AND PN_COMMENT = #{pnComment})
		)
    </update>
    
    <!-- 차단 해제하기 -->
    <update id="unblockUser" parameterType="_int">
		UPDATE MEMBER m
		JOIN MEMBER_PENALTY mp ON m.MEM_NO = mp.MEM_NO
		SET
			m.MEM_STATUS = 'Y',
			mp.PN_DATE = NULL
		WHERE m.MEM_NO = #{memNo}	
    </update>
    
    <!-- =============================delete============================= -->
    
    <delete id="blockCancle" parameterType="_int">
    	DELETE FROM MEMBER_PENALTY
    	WHERE PN_NO = #{pnNo}
    </delete>
</mapper>